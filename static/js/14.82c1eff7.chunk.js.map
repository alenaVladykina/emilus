{"version":3,"sources":["views/app-views/main/user-list/UserView.js","components/shared-components/AvatarStatus/index.js","views/app-views/main/user-list/index.js","redux/actions/UsesActions.js"],"names":["UserView","_ref","data","visible","close","_jsxs","Drawer","width","placement","onClose","closable","children","className","_jsx","Avatar","size","src","img","name","Divider","dashed","UserOutlined","username","MobileOutlined","phone","HomeOutlined","address","city","MailOutlined","email","CompassOutlined","website","LaptopOutlined","company","renderAvatar","props","concat","type","text","AvatarStatus","suffix","subTitle","id","icon","shape","gap","onNameClick","onClick","connect","_ref2","users","isLoad","fetchUserAction","FETCH_USERS","userDeleteSagaAction","userId","USER_DELETE","payload","userProfileVisible","setUserProfileVisible","useState","selectedUser","setSelectedUser","useEffect","tableColumns","title","dataIndex","render","_","record","sorter","compare","a","b","toLowerCase","elm","Tooltip","Button","EyeOutlined","userInfo","danger","DeleteOutlined","Card","bodyStyle","LoadingOutlined","style","fontSize","spin","Table","columns","dataSource","rowKey"],"mappings":"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","file":"static/js/14.82c1eff7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport 'antd/lib/drawer/style/index.css';\r\nimport {Avatar, Drawer, Divider} from 'antd';\r\nimport {\r\n    MobileOutlined,\r\n    MailOutlined,\r\n    UserOutlined,\r\n    CompassOutlined,\r\n    LaptopOutlined,\r\n    HomeOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nexport const UserView = ({data, visible, close}) => {\r\n    return (\r\n        <Drawer\r\n            width={300}\r\n            placement=\"right\"\r\n            onClose={close}\r\n            closable={false}\r\n            visible={visible}\r\n        >\r\n            <div className=\"text-center mt-3\">\r\n                <Avatar size={80} src={data?.img}/>\r\n                <h3 className=\"mt-2 mb-0\">{data?.name}</h3>\r\n            </div>\r\n            <Divider dashed/>\r\n            <div className=\"\">\r\n                <h6 className=\"text-muted text-uppercase mb-3\">Account details</h6>\r\n                <p>\r\n                    <UserOutlined/>\r\n                    <span className=\"ml-3 text-dark\">Nick: {data?.username}</span>\r\n                </p>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n                <h6 className=\"text-muted text-uppercase mb-3\">CONTACT</h6>\r\n                <p>\r\n                    <MobileOutlined/>\r\n                    <span className=\"ml-3 text-dark\">{data?.phone}</span>\r\n                </p>\r\n                <p>\r\n                    <HomeOutlined/>\r\n                    <span className=\"ml-3 text-dark\">City: {data?.address.city}</span>\r\n                </p>\r\n                <p>\r\n                    <MailOutlined/>\r\n                    <span className=\"ml-3 text-dark\">{data?.email ? data?.email : '-'}</span>\r\n                </p>\r\n                <p>\r\n                    <CompassOutlined/>\r\n                    <span className=\"ml-3 text-dark\">{data?.website}</span>\r\n                </p>\r\n                <p>\r\n                    <LaptopOutlined/>\r\n                    <span className=\"ml-3 text-dark\">Company: {data?.company.name}</span>\r\n                </p>\r\n            </div>\r\n        </Drawer>\r\n\r\n    )\r\n}\r\n\r\nexport default UserView\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import {connect} from \"react-redux\";\r\nimport {useEffect, useState} from \"react\";\r\nimport UserView from \"./UserView\";\r\nimport {Button, Card, Table, Tooltip} from \"antd\";\r\nimport AvatarStatus from \"../../../../components/shared-components/AvatarStatus\";\r\nimport {DeleteOutlined, EyeOutlined, LoadingOutlined} from '@ant-design/icons'\r\nimport {fetchUserAction, userDeleteSagaAction} from \"../../../../redux/actions/UsesActions\";\r\n\r\n\r\nconst UserList = ({users, fetchUserAction, userDeleteSagaAction, isLoad}) => {\r\n    const [userProfileVisible, setUserProfileVisible] = useState(false)\r\n    const [selectedUser, setSelectedUser] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        fetchUserAction();\r\n    }, [])\r\n\r\n\r\n    const deleteUser = userId => {\r\n        userDeleteSagaAction(userId);\r\n    }\r\n\r\n    const showUserProfile = userInfo => {\r\n        setUserProfileVisible(true);\r\n        setSelectedUser(userInfo);\r\n    };\r\n\r\n    const closeUserProfile = () => {\r\n        setUserProfileVisible(false);\r\n        setSelectedUser(null);\r\n    }\r\n\r\n\r\n    const tableColumns = [\r\n        {\r\n            title: 'User',\r\n            dataIndex: 'name',\r\n            render: (_, record) => (\r\n                <div className=\"d-flex\">\r\n                    <AvatarStatus name={record.name} subTitle={record.email}/>\r\n                </div>\r\n            ),\r\n            sorter: {\r\n                compare: (a, b) => {\r\n                    a = a.name.toLowerCase();\r\n                    b = b.name.toLowerCase();\r\n                    return a > b ? -1 : b > a ? 1 : 0;\r\n                },\r\n            },\r\n        },\r\n        {\r\n            title: 'Login',\r\n            dataIndex: 'username',\r\n            render: (name) => (\r\n                <span>{name}</span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            render: phone => (\r\n                <span>{phone}</span>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Website',\r\n            dataIndex: 'website',\r\n            render: website => (\r\n                <span>{website}</span>\r\n            ),\r\n        },\r\n        {\r\n            title: '',\r\n            dataIndex: 'actions',\r\n            render: (_, elm) => (\r\n                <div className=\"text-right\">\r\n                    <Tooltip title=\"View\">\r\n                        <Button type=\"primary\" className=\"mr-2\" icon={<EyeOutlined/>} onClick={() => {\r\n                            showUserProfile(elm)\r\n                        }} size=\"small\"/>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Delete\">\r\n                        <Button danger icon={<DeleteOutlined/>} onClick={() => {\r\n                            deleteUser(elm.id)\r\n                        }} size=\"small\"/>\r\n                    </Tooltip>\r\n                </div>\r\n            )\r\n        }\r\n    ];\r\n\r\n\r\n    return (\r\n\r\n        <Card bodyStyle={{'padding': '0px'}}>\r\n            {isLoad && <LoadingOutlined style={{fontSize: 35}} spin/>}\r\n            <Table columns={tableColumns} dataSource={users} rowKey='id'/>\r\n            <UserView data={selectedUser} visible={userProfileVisible} close={() => {\r\n                closeUserProfile()\r\n            }}/>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({users}) => {\r\n    return {\r\n        users: users.users,\r\n        isLoad: users.isLoad,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchUserAction, userDeleteSagaAction})(UserList);\r\n\r\n\r\n","import {USER_DELETE, FETCH_USERS, IS_LOADING} from \"../constants/UserString\";\r\n\r\n\r\nexport const userDeleteSagaAction = (userId) => {\r\n    return {\r\n        type: USER_DELETE,\r\n        payload: userId\r\n    }\r\n};\r\n\r\n\r\nexport const fetchUserAction = () => {\r\n    return {\r\n        type: FETCH_USERS,\r\n    }\r\n};\r\n\r\nexport const isLoadingAction = (isLoad) => {\r\n    return {\r\n        type: IS_LOADING,\r\n        payload: isLoad\r\n    }\r\n};\r\n\r\n\r\n\r\n"],"sourceRoot":""}