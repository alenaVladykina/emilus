{"version":3,"sources":["redux/constants/UserString.js","components/shared-components/Flex/index.js","configs/EnvironmentConfig.js","configs/AppConfig.js","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/UsersReduser.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","services/UsersServise.js","redux/sagas/UserSaga.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/shared-components/Loading/index.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","views/index.js","App.js","serviceWorker.js","index.js","utils/index.js","redux/actions/Auth.js"],"names":["FETCH_USERS","USERS_FETCH","USER_DELETE","USERS_USER_DELETE","Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","_jsx","concat","defaultProps","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","arguments","length","undefined","action","type","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","theme","users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","reducers","combineReducers","Theme","Auth","filter","el","userId","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","async","password","signInWithEmailAndPassword","then","user","catch","err","signInEmailRequest","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","takeEvery","_ref","payload","call","put","showAuthMessage","setItem","uid","authenticated","signOutUser","removeItem","signOutSuccess","signUpWithFBEmail","_ref2","signUpSuccess","error","signInWithFBGoogle","signInWithGoogleAuthenticated","signInWithFacebook","signInWithFacebookAuthenticated","rootSaga","all","fork","ExampleService","axios","get","res","data","fetchUserSaga","getPostRequest","e","console","log","deleteUserSaga","getState","UserSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","FormattedMessage","withRef","Icon","Component","render","this","_Fragment","React","createElement","navigationConfig","key","path","title","icon","breadcrumb","submenu","DashboardOutlined","CarryOutOutlined","ShoppingCartOutlined","ShoppingOutlined","UserOutlined","PictureOutlined","GiftOutlined","ShopOutlined","UsergroupAddOutlined","MailOutlined","SettingOutlined","MobileOutlined","FileOutlined","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","IntlMessage","toString","setDefaultOpen","keyList","keyString","arr","split","index","elm","push","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","_jsxs","Item","Link","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","Scrollbars","autoHide","MenuContent","getColorContrast","LoadingOutlined","fontSize","spin","Loading","align","cover","Spin","indicator","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","Drawer","placement","closable","visible","bodyStyle","padding","Logo","ArrowLeftOutlined","ColorPicker","colorChange","color","setVisible","useState","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","SketchPicker","onChange","value","rgb","rgba","r","g","b","a","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","_ref3","onLocaleChange","configDisplay","languageOption","i","CheckOutlined","Dropdown","overlay","trigger","href","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","isCollapse","switcher","themes","useThemeSwitcher","hex","rgbaToHex","Radio","Group","size","onNavTypeClick","target","Button","Switch","checked","isChecked","changedTheme","NavLanguage","CopyToClipboard","text","configState","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","constructor","showDrawer","setState","ThemeConfigurator","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","AutoComplete","ref","dropdownClassName","onSelect","onSearch","searchText","item","label","filterOption","inputValue","option","toUpperCase","indexOf","Input","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","NavSearch","breadcrumbData","forEach","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","location","pathSnippets","pathname","buildBreadcrumb","_","url","slice","join","Breadcrumb","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","Suspense","fallback","Route","component","lazy","Redirect","from","memo","Content","AppLayout","currentRouteInfo","getRouteInfo","isNavSide","status","HeaderNav","TopNav","SideNav","paddingLeft","MobileNav","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","currentAppLocale","IntlProvider","ConfigProvider","exact","dark","process","light","App","Provider","ThemeSwitcherProvider","themeMap","defaultTheme","insertionPoint","Router","Views","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","uuid","x","Math","floor","random","abs","now","Utils","getNameInitial","initials","shift","pop","navTree","route","p","hasOwnProperty","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","shadeColor","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","parseFloat","toFixed","outParts","round","part","getSignNum","number","positive","negative","antdTableSorter","toLowerCase","filterArray","list","deleteArrayRow","wildCardSearch","input","screens","breakpoints","hideAuthMessage","showLoading"],"mappings":"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","file":"static/js/main.1875ced5.chunk.js","sourcesContent":["export const FETCH_USERS = 'FETCH_USERS';\r\nexport const USERS_FETCH = 'USERS_FETCH';\r\nexport const USER_DELETE = 'USER_DELETE';\r\nexport const USERS_USER_DELETE = 'USERS_USER_DELETE'\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import {USERS_FETCH, USERS_USER_DELETE} from \"../constants/UserString\";\r\n\r\nconst user = {\r\n    id: 1,\r\n    name: \"Leanne Graham\",\r\n    username: \"Bret\",\r\n    email: \"Sincere@april.biz\",\r\n    address: {\r\n        street: \"Kulas Light\",\r\n        suite: \"Apt. 556\",\r\n        city: \"Gwenborough\",\r\n        zipcode: \"92998-3874\",\r\n        geo: {\r\n            lat: \"-37.3159\",\r\n            lng: \"81.1496\"\r\n        }\r\n    },\r\n    phone: \"1-770-736-8031 x56442\",\r\n    website: \"hildegard.org\",\r\n    company: {\r\n        name: \"Romaguera-Crona\",\r\n        catchPhrase: \"Multi-layered client-server neural-net\",\r\n        bs: \"harness real-time e-markets\"\r\n    }\r\n}\r\nconst initState = {\r\n    users: [user],\r\n}\r\n\r\nexport const usersReduser = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case USERS_FETCH: {\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            };\r\n        }\r\n        case USERS_USER_DELETE: {\r\n            return {\r\n                ...state,\r\n                users: state.users.filter(el => el.id !== action.userId)\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\nimport {usersReduser} from \"./UsersReduser\";\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth,\r\n    users:usersReduser\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import {all, takeEvery, put, fork, call} from 'redux-saga/effects';\r\nimport {\r\n    AUTH_TOKEN,\r\n    SIGNIN,\r\n    SIGNOUT,\r\n    SIGNUP,\r\n    SIGNIN_WITH_GOOGLE,\r\n    SIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n    showAuthMessage,\r\n    authenticated,\r\n    signOutSuccess,\r\n    signUpSuccess,\r\n    signInWithGoogleAuthenticated,\r\n    signInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\n\r\n\r\nexport function* signInWithFBEmail() {\r\n    yield takeEvery(SIGNIN, function* ({payload}) {\r\n        const {email, password} = payload;\r\n        try {\r\n            const user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n            if (user.message) {\r\n                yield put(showAuthMessage(user.message));\r\n            } else {\r\n                localStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n                yield put(authenticated(user.user.uid));\r\n            }\r\n        } catch (err) {\r\n            yield put(showAuthMessage(err));\r\n        }\r\n    });\r\n}\r\n\r\nexport function* signOut() {\r\n    yield takeEvery(SIGNOUT, function* () {\r\n        try {\r\n            const signOutUser = yield call(FirebaseService.signOutRequest);\r\n            if (signOutUser === undefined) {\r\n                localStorage.removeItem(AUTH_TOKEN);\r\n                yield put(signOutSuccess(signOutUser));\r\n            } else {\r\n                yield put(showAuthMessage(signOutUser.message));\r\n            }\r\n        } catch (err) {\r\n            yield put(showAuthMessage(err));\r\n        }\r\n    });\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n    yield takeEvery(SIGNUP, function* ({payload}) {\r\n            const {email, password} = payload;\r\n            try {\r\n                const user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n                if (user.message) {\r\n                    yield put(showAuthMessage(user.message));\r\n                } else {\r\n                    localStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n                    yield put(signUpSuccess(user.user.uid));\r\n                }\r\n            } catch (error) {\r\n                yield put(showAuthMessage(error));\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n    yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n        try {\r\n            const user = yield call(FirebaseService.signInGoogleRequest);\r\n            if (user.message) {\r\n                yield put(showAuthMessage(user.message));\r\n            } else {\r\n                localStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n                yield put(signInWithGoogleAuthenticated(user.user.uid));\r\n            }\r\n        } catch (error) {\r\n            yield put(showAuthMessage(error));\r\n        }\r\n    });\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n    yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n        try {\r\n            const user = yield call(FirebaseService.signInFacebookRequest);\r\n            if (user.message) {\r\n                yield put(showAuthMessage(user.message));\r\n            } else {\r\n                localStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n                yield put(signInWithFacebookAuthenticated(user.user.uid));\r\n            }\r\n        } catch (error) {\r\n            yield put(showAuthMessage(error));\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(signInWithFBEmail),\r\n        fork(signOut),\r\n        fork(signUpWithFBEmail),\r\n        fork(signInWithFBGoogle),\r\n        fork(signInWithFacebook)\r\n    ]);\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\nconst ExampleService = {}\r\n\r\n\r\nExampleService.getPostRequest = () => {\r\n    return axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then((res) => {\r\n            return res.data\r\n        })\r\n        .catch(err => err)\r\n}\r\n\r\n\r\nexport default ExampleService","import {call, put, takeEvery} from \"redux-saga/effects\";\r\nimport ExampleService from \"../../services/UsersServise\";\r\nimport {\r\n    FETCH_USERS,\r\n    USERS_FETCH,\r\n    USER_DELETE,\r\n} from '../constants/UserString';\r\n\r\n\r\nexport function* fetchUserSaga() {\r\n    try {\r\n        const users = yield call(ExampleService.getPostRequest)\r\n        yield put({type: \"USERS_FETCH\", users});\r\n    } catch (e) {\r\n        console.log('Error', e.message)\r\n    }\r\n}\r\n\r\nexport function* deleteUserSaga(action) {\r\n    const userId = action.payload\r\n    try {\r\n        yield put({type: \"USERS_USER_DELETE\", userId});\r\n    } catch (e) {\r\n        console.log('Error', e.message)\r\n    }\r\n}\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield takeEvery(FETCH_USERS, fetchUserSaga)\r\n    yield takeEvery(USER_DELETE, deleteUserSaga)\r\n}\r\n","import {all} from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\nimport UserSaga from './UserSaga';\r\n\r\nexport default function* rootSaga(getState) {\r\n    yield all([\r\n        Auth(),\r\n        UserSaga()\r\n    ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n    DashboardOutlined,\r\n    ShoppingOutlined,\r\n    UserOutlined,\r\n    ShoppingCartOutlined,\r\n    PictureOutlined,\r\n    GiftOutlined,\r\n    UsergroupAddOutlined,\r\n    ShopOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    MobileOutlined,\r\n    FileOutlined,\r\n    CarryOutOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport {APP_PREFIX_PATH} from 'configs/AppConfig'\r\n\r\nconst dashBoardNavTree = [{\r\n    key: 'main',\r\n    path: `${APP_PREFIX_PATH}/main`,\r\n    title: 'Основное',\r\n    icon: '',\r\n    breadcrumb: false,\r\n    submenu: [\r\n        {\r\n            key: 'dashboards',\r\n            path: `${APP_PREFIX_PATH}/main/dashboards`,\r\n            title: 'Дашборд',\r\n            icon: DashboardOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'scheduler',\r\n            path: `${APP_PREFIX_PATH}/main/scheduler`,\r\n            title: 'Планировщик',\r\n            icon: CarryOutOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-catalog',\r\n            path: `${APP_PREFIX_PATH}/main/catalog`,\r\n            title: 'Каталог',\r\n            icon: ShoppingCartOutlined,\r\n            breadcrumb: true,\r\n            submenu: [\r\n                {\r\n                    key: 'main-catalog-products',\r\n                    path: `${APP_PREFIX_PATH}/main/catalog/products`,\r\n                    title: 'Товары',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-catalog-category',\r\n                    path: `${APP_PREFIX_PATH}/main/catalog/category`,\r\n                    title: 'Категории',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-catalog-collection',\r\n                    path: `${APP_PREFIX_PATH}/main/catalog/collection`,\r\n                    title: 'Коллекции',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-catalog-combo',\r\n                    path: `${APP_PREFIX_PATH}/main/catalog/combo`,\r\n                    title: 'Комбо',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            key: 'main-orders',\r\n            path: `${APP_PREFIX_PATH}/main/orders`,\r\n            title: 'Заказы',\r\n            icon: ShoppingOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-clients',\r\n            path: `${APP_PREFIX_PATH}/main/clients`,\r\n            title: 'Клиенты',\r\n            icon: UserOutlined,\r\n            breadcrumb: true,\r\n            submenu: [\r\n                {\r\n                    key: 'main-clients-clientList',\r\n                    path: `${APP_PREFIX_PATH}/main/clients/client-list`,\r\n                    title: 'Список Клиентов',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-clients-clientGroup',\r\n                    path: `${APP_PREFIX_PATH}/main/clients/client-group`,\r\n                    title: 'Группы клиентов',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            key: 'main-banners',\r\n            path: `${APP_PREFIX_PATH}/main/banners`,\r\n            title: 'Баннеры',\r\n            icon: PictureOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-promo',\r\n            path: `${APP_PREFIX_PATH}/main/promo`,\r\n            title: 'Промокоды',\r\n            icon: GiftOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-offlinePoint',\r\n            path: `${APP_PREFIX_PATH}/main/offlinePoint`,\r\n            title: 'Оффлайн точка',\r\n            icon: ShopOutlined,\r\n            breadcrumb: true,\r\n            submenu: [\r\n                {\r\n                    key: 'main-offlinePoint-addresses',\r\n                    path: `${APP_PREFIX_PATH}/main/offlinePoint/addresses`,\r\n                    title: 'Адреса',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n                {\r\n                    key: 'main-offlinePoint-geofence',\r\n                    path: `${APP_PREFIX_PATH}/main/offlinePoint/geofence`,\r\n                    title: 'Геозоны',\r\n                    icon: '',\r\n                    breadcrumb: false,\r\n                    submenu: []\r\n                },\r\n            ]\r\n        },\r\n        {\r\n            key: 'main-employees',\r\n            path: `${APP_PREFIX_PATH}/main/employees`,\r\n            title: 'Сотрудники',\r\n            icon: UsergroupAddOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'main-message',\r\n            path: `${APP_PREFIX_PATH}/main/message`,\r\n            title: 'Рассылки',\r\n            icon: MailOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n    ]\r\n}]\r\n\r\nconst systemNavTree = [{\r\n    key: 'system',\r\n    path: `${APP_PREFIX_PATH}/system`,\r\n    title: 'Системные',\r\n    icon: '',\r\n    breadcrumb: false,\r\n    submenu: [\r\n        {\r\n            key: 'system-settings',\r\n            path: `${APP_PREFIX_PATH}/system/settings`,\r\n            title: 'Настройки',\r\n            icon: SettingOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'system-app',\r\n            path: `${APP_PREFIX_PATH}/system/app`,\r\n            title: 'Мобильное приложение',\r\n            icon: MobileOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n        {\r\n            key: 'system-log',\r\n            path: `${APP_PREFIX_PATH}/system/log`,\r\n            title: 'Логи',\r\n            icon: FileOutlined,\r\n            breadcrumb: false,\r\n            submenu: []\r\n        },\r\n    ]\r\n}]\r\n\r\n\r\nconst navigationConfig = [\r\n    ...dashBoardNavTree,\r\n    ...systemNavTree\r\n\r\n]\r\n\r\nexport default navigationConfig;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, {lazy, Suspense} from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport {APP_PREFIX_PATH} from 'configs/AppConfig'\r\nimport {Spin} from 'antd'\r\n\r\nexport const AppViews = () => {\r\n    return (\r\n        <Suspense fallback={<Spin size=\"large\"/>}>\r\n            <Switch>\r\n                <Route path={`${APP_PREFIX_PATH}/main/clients/client-list`}\r\n                       component={lazy(() => import(`./main/user-list`))}/>\r\n                <Route path={`${APP_PREFIX_PATH}/main/scheduler`} component={lazy(() => import(`./main/scheduler`))}/>\r\n                <Redirect from={`${APP_PREFIX_PATH}/main`} to={`${APP_PREFIX_PATH}/main`}/>\r\n            </Switch>\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\nimport {HashRouter as Router} from 'react-router-dom';\r\nimport Views from './views';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {ThemeSwitcherProvider} from \"react-css-theme-switcher\";\r\nimport {THEME_CONFIG} from './configs/AppConfig';\r\n\r\nconst themes = {\r\n    dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n    light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Provider store={store}>\r\n                <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme}\r\n                                       insertionPoint=\"styles-insertion-point\">\r\n                    <Router>\r\n                        <Switch>\r\n                            <Route path=\"/\" component={Views}/>\r\n                        </Switch>\r\n                    </Router>\r\n                </ThemeSwitcherProvider>\r\n            </Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\nexport function uuid() {\r\n\tconst x = 2147483648;\r\n\treturn Math.floor(Math.random() * x).toString(36) +\r\n\t\tMath.abs(Math.floor(Math.random() * x) ^ Date.now()).toString(36);\r\n}\r\n\r\n\r\nexport default Utils;","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n"],"sourceRoot":""}